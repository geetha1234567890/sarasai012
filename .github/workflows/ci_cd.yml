name: Build and Test

on:
  push:
    branches:
      - main  # Adjust the branch name as needed

permissions:
  contents: read
  id-token: none

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version

      - name: Change to the correct directory
        run: cd SarasAI-Repo-1/SARAS_AI_FRONTEND

      - name: Delete package-lock.json and node_modules
        run: |
          rm -rf package-lock.json node_modules
        working-directory: SarasAI-Repo-1/SARAS_AI_FRONTEND

      - name: Install dependencies
        run: npm install
        working-directory: SarasAI-Repo-1/SARAS_AI_FRONTEND

      - name: Create .env file
        run: echo "SKIP_PREFLIGHT_CHECK=true" > .env
        working-directory: SarasAI-Repo-1/SARAS_AI_FRONTEND

      #- name: Run unit tests
       # run: npm test -- --detectOpenHandles
       # working-directory: SarasAI-Repo-1/SARAS_AI_FRONTEND

      - name: Build project
        run: npm run build
        working-directory: SarasAI-Repo-1/SARAS_AI_FRONTEND
        
      - name: Azure Login
        run: |
          az login --use-device-code

      - name: Azure Docker Login
        if: success()
        uses: azure/docker-login@v1
        with:
          login-server: sarasai.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to ACR
        if: success()
        run: |
          cd SarasAI-Repo-1
          docker build . -t sarasai.azurecr.io/sarasaiftend:${{ github.sha }}
          docker push sarasai.azurecr.io/sarasaiftend:${{ github.sha }}

      # - name: Deploy to Azure Container Apps
      #   if: success()
      #   run: |
      #     RESOURCE_GROUP=rg
      #     CONTAINER_APP_NAME=hello
      #     ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
      #     IMAGE_NAME=${{ secrets.ACR_LOGIN_SERVER }}/hello

      #     # Retry mechanism for deploying to Azure Container Apps
      #     for i in {1..5}; do
      #       az containerapp update \
      #         --name $CONTAINER_APP_NAME \
      #         --resource-group $RESOURCE_GROUP \
      #         --image $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} && break || sleep 60
      #     done
